#!/bin/bash

#source /export/HCP/bin/xnat_pbs_setup connectomedb
#source /export/HCP/bin/xnat_pbs_setup intradb
#export PATH=/act/Anaconda3-2.3.0/bin:${PATH}

#!/bin/bash

# Set up environment variables for access to a specified XNAT database and archive
# Currently supported XNAT databases are ConnectomeDB and IntraDB
# Specified database is converted to lowercase before checking. So that specification
# is case insensitive.
# Author: Timothy B. Brown (tbbrown@wustl.edu)
# Creation Date: 21 Nov 2017
# Last Modification Date: 14 May 2018

requested_db="$(echo ${1} | tr '[:upper:]' '[:lower:]')"
if [ -z "${2}" ]; then
	unset silence_requested
elif [ "${2}" == "-s" ]; then
	silence_requested="TRUE"
else
	echo "Unrecognized second parameter: ${2}"
	echo ""
	echo "xnat_pbs_setup: ERROR:"
	echo "xnat_pbs_setup: ERROR: Unrecognized <silence-request>: ${2}"
	echo "xnat_pbs_setup: ERROR: Please specify -s or leave second parameter unspecified"
	echo "xnat_pbs_setup: ERROR:"
fi

# Code and scripts for submitting XNAT related PBS jobs

if [ "${requested_db}" == "connectomedb" ]; then

	if [ -z "${silence_requested}" ]; then
		echo "xnat_pbs_setup: Setting up XNAT_PBS_JOBS environment to work with ConnectomeDB"
	fi

	# XNAT Archive
	export XNAT_PBS_JOBS_ARCHIVE_ROOT=/HCP/hcpdb/archive

	# Where data is placed outside of the archive for pipeline processing
	# a.k.a. the "Build space"
 	export XNAT_PBS_JOBS_BUILD_DIR=/HCP/hcpdb/build_ssd/chpc/BUILD/${USER}

	# Where log files that should NOT be pushed back into the archive
	# after a pipeline runs should be stored.
	export XNAT_PBS_JOBS_LOG_DIR=/HCP/hcpdb/build_ssd/chpc/logs/pbs/${USER}


	# Where files are stored that mark the running/queued status for 
	# various pipelines for the subjects
	export XNAT_PBS_JOBS_RUNNING_STATUS_DIR=/HCP/hcpdb/build_ssd/chpc/RUNNING_STATUS

	# Server name (URL minus the protocol specification) of the 
	# XNAT server with which to work
	export XNAT_PBS_JOBS_XNAT_SERVER=db.humanconnectome.org

	# Package directory
	# Root directory of where packages are placed
	export XNAT_PBS_JOBS_PACKAGES_ROOT=/HCP/hcpdb/packages

	# Shadows Information
	export XNAT_PBS_JOBS_MIN_SHADOW=1
	export XNAT_PBS_JOBS_MAX_SHADOW=3

elif [ "${requested_db}" == "intradb" ]; then

	if [ -z "${silence_requested}" ]; then
		echo "xnat_pbs_setup: Setting up XNAT_PBS_JOBS environment to work with IntraDB"
	fi

	# XNAT Archive
	export XNAT_PBS_JOBS_ARCHIVE_ROOT=/HCP/intradb/archive

	# Where data is placed outside of the archive for pipeline processing
	# a.k.a. the "Build space"
	export XNAT_PBS_JOBS_BUILD_DIR=/HCP/hcpdb/build_ssd/chpc/BUILD/${USER}

	# Where log files that should NOT be pushed back into the archive
	# after a pipeline runs should be stored.
	export XNAT_PBS_JOBS_LOG_DIR=/HCP/hcpdb/build_ssd/chpc/logs/pbs/${USER}


	# Where files are stored that mark the running/queued status for 
	# various pipelines for the subjects
	export XNAT_PBS_JOBS_RUNNING_STATUS_DIR=/HCP/hcpdb/build_ssd/chpc/RUNNING_STATUS

	# Server name (URL minus the protocol specification) of the 
	# XNAT server with which to work
	export XNAT_PBS_JOBS_XNAT_SERVER=intradb.humanconnectome.org

	# Package directory
	# Root directory of where packages are placed
	# Note: For intradb, this packages directory does not yet exist.
	#       No packaging has been done for intradb projects
	export XNAT_PBS_JOBS_PACKAGES_ROOT=/HCP/intradb/packages

	# Shadows Information
	export XNAT_PBS_JOBS_MIN_SHADOW=1
	export XNAT_PBS_JOBS_MAX_SHADOW=2
 
else

	echo "xnat_pbs_setup: ERROR:"
	echo "xnat_pbs_setup: ERROR: Unrecognized <db-spec>: ${1} --> ${requested_db}"
	echo "xnat_pbs_setup: ERROR: Please specify connectomedb or intradb (case insensitive)"
	echo "xnat_pbs_setup: ERROR:"

fi



if [ -z "${XNAT_PBS_JOBS}" ]; then
	script_name=$(basename "${0}")
	echo "${script_name}: ABORTING: XNAT_PBS_JOBS environment variable must be set"
	exit 1
fi

if [ -z "${HCP_RUN_UTILS}" ]; then
	echo "${g_script_name}: ABORTING: HCP_RUN_UTILS environment variable must be set"
	exit 1
fi

source ${HCP_RUN_UTILS}/shlib/utils.shlib
set_g_python_environment
source activate ${g_python_environment} 2>/dev/null
${XNAT_PBS_JOBS}/lib/ccf/structural_preprocessing/SubmitStructuralPreprocessingBatch.py $@
source deactivate 2>/dev/null
